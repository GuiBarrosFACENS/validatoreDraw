import lombok.AllArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.apache.kafka.clients.producer.ProducerRecord;
import org.springframework.kafka.annotation.KafkaListener;
import org.springframework.kafka.core.KafkaTemplate;
import org.springframework.retry.support.RetryTemplate;
import org.springframework.stereotype.Component;

@Component
@AllArgsConstructor
@Slf4j
@KafkaListener(topics = "invoice-payment-plard", groupId = "SEU_GRUPO")
public class KafkaProvider implements SendMessageUseCase {

  private final InvoicePaymentYkProperties invoicePaymentYkProperties;
  private final KafkaTemplate<String, String> kafkaTemplate;
  private final InvoicePaymentPlardMapper invoicePaymentPlardMapper;
  private final ObjectMapper objectMapper;
  private final ExtractorAdvice extractor;
  private final FibonacciBackoffPolicyRetry fibonacciBackoffPolicyRetry;

  @Override
  public void sendMessage(BilledInvoicePlard billedInvoicePlard) {
    BilledInvoicePlardDTO billedInvoicePlardDTO =
        invoicePaymentPlardMapper.toDto(billedInvoicePlard);
    try {
      log.info("Sending notification for invoice {}", billedInvoicePlard);

      String messageBody = objectMapper.writeValueAsString(billedInvoicePlardDTO);
      ProducerRecord<String, String> producerRecord =
          new ProducerRecord<>(invoicePaymentYkProperties.getPlardTopic(), messageBody);

      log.info("Sending message to Kafka: {}", messageBody);
      sendMessageWithRetry(producerRecord);

    } catch (Exception e) {
      log.error("Error sending message to Kafka", e);
      throw new ErrorSendTopicKafkaException(
          billedInvoicePlardDTO.getInvoiceInfo().getExternalReference(), e);
    }
  }

  public void sendMessageWithRetry(ProducerRecord<String, String> producerRecord) {
    RetryTemplate retryTemplate = new RetryTemplate();
    retryTemplate.setBackOffPolicy(fibonacciBackoffPolicyRetry);

    try {
      retryTemplate.execute(
          context -> {
            kafkaTemplate.send(producerRecord).get();
            return null;
          });
    } catch (Exception e) {
      ExtractorAdvice.put("data.data.mapAttributes.key-st-error", e.getMessage());
      extractor.execute("telemetria_log_category");

      log.error("Error sending message to Kafka after retries", e);
      throw new RuntimeException("Failed to send message to Kafka after retries", e);
    }
  }
}


---

import java.nio.file.Files;
import java.nio.file.Paths;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.http.MediaType;
import org.springframework.kafka.core.KafkaTemplate;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.setup.MockMvcBuilders;
import org.springframework.web.context.WebApplicationContext;

@ExtendWith(MockitoExtension.class)
@SpringBootTest
class InvoicePaymentIntegrationTest {
  private String urlWebhook = "/card_invoice_payment_notification/v1/invoice_payments";

  @Autowired private WebApplicationContext webApplicationContext;

  private MockMvc mockMvc;

  @MockBean private KafkaTemplate<String, String> kafkaTemplate;

  @Mock private InvoicePaymentRequest invoicePaymentRequest;

  @InjectMocks private KafkaProvider kafkaProviderImpl;

  @BeforeEach
  public void setup() {
    mockMvc = MockMvcBuilders.webAppContextSetup(webApplicationContext).build();
    invoicePaymentRequest = new InvoicePaymentRequest();
  }

  @Test
  public void testInvoicePaymentWebhook() throws Exception {

    String requestBody =
        new String(Files.readAllBytes(Paths.get("src/test/resources/json/billed-invoice-yk.json")));

    mockMvc
        .perform(
            post("/card_invoice_payment_notification/v1/invoice_payments")
                .contentType(MediaType.APPLICATION_JSON)
                .content(requestBody))
        .andExpect(status().isAccepted());
  }
}

--

10:28:55.657[    main] INFO      c.s.m.d.usecase.BilletInvoiceUseCase fc2bc242-d991-4ab1-b467-645ab792a2ea :  :  : Sending notification for invoice YKP001234567000000000001814072023
10:28:55.664[    main] INFO     c.s.m.i.messageprovider.KafkaProvider fc2bc242-d991-4ab1-b467-645ab792a2ea :  :  : Sending notification for invoice com.santander.mpa.domain.entity.BilledInvoicePlard@732301d1
10:28:55.679[    main] INFO     c.s.m.i.messageprovider.KafkaProvider fc2bc242-d991-4ab1-b467-645ab792a2ea :  :  : Sending message to Kafka: {"contractId":null,"invoiceInfo":{"paymentType":"PIX","externalReference":"18"},"paymentDate":[2024,8,26,22,29,37],"dueDate":[2023,8,14],"paymentAmount":{"amount":1500,"currency":"BRL","numericCurrency":"986"}}
10:28:55.697[    main] DEBUG       c.s.extractor.utils.ExtractorUtils fc2bc242-d991-4ab1-b467-645ab792a2ea :  :  : Starting 'doMDC' process
10:28:55.698[    main] DEBUG       c.s.extractor.utils.ExtractorUtils fc2bc242-d991-4ab1-b467-645ab792a2ea :  :  : Finished extract MDC
10:28:55.698[    main] DEBUG       c.s.extractor.utils.ExtractorUtils fc2bc242-d991-4ab1-b467-645ab792a2ea :  :  : Finished 'doMDC' process
10:28:55.698[    main] DEBUG  c.s.extractor.utils.ExtractorAdviceUtil fc2bc242-d991-4ab1-b467-645ab792a2ea :  :  : Extracted and starting send to: santander-telemetry-log > json
10:28:55.785[    main] INFO        c.s.e.p.TelemetryLogImplementation fc2bc242-d991-4ab1-b467-645ab792a2ea :  :  : Telemetry log has been recorded
10:28:55.785[    main] DEBUG       c.s.e.p.TelemetryLogImplementation fc2bc242-d991-4ab1-b467-645ab792a2ea :  :  : json logEvent: Event(id=88f07de1-59e4-48f0-a98e-39611cb97788, eventTime=2024-09-09T10:28:55.731-0300, sigla=MPA, application=sbr-monetar-invoicebatch, journey=Cartoes, subJourney=Pagamento de fatura, channel=One Digital, product=Cartão de credito, transaction=, hostname=, producer=arsenal-with-telemetry2, source=br.com.santander, specversion=1.0.0, type=TEC, dataContentType=application/json, correlationId=, span=PAGAMENTO_FATURA_WEBHOOK, returnCode=, data=EventData(data=TemetryAttributes [mapAttributes={key-st_identificador= , key-st_response= , key-st_type=TEC, key-st_timestamp=, key-st-error=Cannot invoke "java.util.concurrent.CompletableFuture.get()" because the return value of "org.springframework.kafka.core.KafkaTemplate.send(org.apache.kafka.clients.producer.ProducerRecord)" is null}]))
10:28:55.801[    main] DEBUG  c.s.extractor.utils.ExtractorAdviceUtil fc2bc242-d991-4ab1-b467-645ab792a2ea :  :  : Successfully extrat and sent to santander-telemetry-log > json > {"id":"","eventTime":"","sigla":"MPA","application":"sbr-monetar-invoicebatch","journey":"Cartoes","subJourney":"Pagamento de fatura","channel":"One Digital","product":"Cartão de credito","transaction":"","hostname":"","producer":"","source":"","specversion":"","type":"TEC","dataContentType":"application/json","correlationId":"","span":"PAGAMENTO_FATURA_WEBHOOK","returnCode":"","data":{"data":{"mapAttributes":{"key-st_identificador":" ","key-st_response":" ","key-st_type":"TEC","key-st_timestamp":"","key-st-error":"Cannot invoke \"java.util.concurrent.CompletableFuture.get()\" because the return value of \"org.springframework.kafka.core.KafkaTemplate.send(org.apache.kafka.clients.producer.ProducerRecord)\" is null"}}}}
10:28:55.801[    main] ERROR    c.s.m.i.messageprovider.KafkaProvider fc2bc242-d991-4ab1-b467-645ab792a2ea :  :  : Error sending message to Kafka after retries
java.lang.NullPointerException: Cannot invoke "java.util.concurrent.CompletableFuture.get()" because the return value of "org.springframework.kafka.core.KafkaTemplate.send(org.apache.kafka.clients.producer.ProducerRecord)" is null
	at com.santander.mpa.infra.messageprovider.KafkaProvider.lambda$sendMessageWithRetry$0(KafkaProvider.java:61)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:335)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:211)
	at com.santander.mpa.infra.messageprovider.KafkaProvider.sendMessageWithRetry(KafkaProvider.java:59)
	at com.santander.mpa.infra.messageprovider.KafkaProvider.sendMessage(KafkaProvider.java:45)
	at com.santander.mpa.domain.usecase.BilletInvoiceUseCase.sendNotification(BilletInvoiceUseCase.java:21)
	at com.santander.mpa.app.service.impl.BilletInvoiceServiceImpl.sendNotification(BilletInvoiceServiceImpl.java:24)
	at com.santander.mpa.app.resource.WebhookResource.invoicePaymentsPost(WebhookResource.java:23)
	at com.santander.mpa.api.WebhookApi.invoicePaymentsPost(WebhookApi.java:93)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:925)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:547)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at org.springframework.test.web.servlet.TestDispatcherServlet.service(TestDispatcherServlet.java:72)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:614)
	at org.springframework.mock.web.MockFilterChain$ServletFilterProxy.doFilter(MockFilterChain.java:165)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.test.web.servlet.MockMvc.perform(MockMvc.java:201)
10:28:55.804[    main] ERROR    c.s.m.i.messageprovider.KafkaProvider fc2bc242-d991-4ab1-b467-645ab792a2ea :  :  : Error sending message to Kafka
java.lang.RuntimeException: Failed to send message to Kafka after retries
	at com.santander.mpa.infra.messageprovider.KafkaProvider.sendMessageWithRetry(KafkaProvider.java:69)
	at com.santander.mpa.infra.messageprovider.KafkaProvider.sendMessage(KafkaProvider.java:45)
	at com.santander.mpa.domain.usecase.BilletInvoiceUseCase.sendNotification(BilletInvoiceUseCase.java:21)
	at com.santander.mpa.app.service.impl.BilletInvoiceServiceImpl.sendNotification(BilletInvoiceServiceImpl.java:24)
	at com.santander.mpa.app.resource.WebhookResource.invoicePaymentsPost(WebhookResource.java:23)
	at com.santander.mpa.api.WebhookApi.invoicePaymentsPost(WebhookApi.java:93)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:925)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:547)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at org.springframework.test.web.servlet.TestDispatcherServlet.service(TestDispatcherServlet.java:72)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:614)
	at org.springframework.mock.web.MockFilterChain$ServletFilterProxy.doFilter(MockFilterChain.java:165)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.test.web.servlet.MockMvc.perform(MockMvc.java:201)
	at com.santander.mpa.InvoicePaymentIntegrationTest.testInvoicePaymentWebhook(InvoicePaymentIntegrationTest.java:53)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
Caused by: java.lang.NullPointerException: Cannot invoke "java.util.concurrent.CompletableFuture.get()" because the return value of "org.springframework.kafka.core.KafkaTemplate.send(org.apache.kafka.clients.producer.ProducerRecord)" is null
	at com.santander.mpa.infra.messageprovider.KafkaProvider.lambda$sendMessageWithRetry$0(KafkaProvider.java:61)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:335)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:211)
	at com.santander.mpa.infra.messageprovider.KafkaProvider.sendMessageWithRetry(KafkaProvider.java:59)
	at com.santander.mpa.infra.messageprovider.KafkaProvider.sendMessage(KafkaProvider.java:45)
	at com.santander.mpa.domain.usecase.BilletInvoiceUseCase.sendNotification(BilletInvoiceUseCase.java:21)
	at com.santander.mpa.app.service.impl.BilletInvoiceServiceImpl.sendNotification(BilletInvoiceServiceImpl.java:24)
	at com.santander.mpa.app.resource.WebhookResource.invoicePaymentsPost(WebhookResource.java:23)
	at com.santander.mpa.api.WebhookApi.invoicePaymentsPost(WebhookApi.java:93)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:925)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:547)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at org.springframework.test.web.servlet.TestDispatcherServlet.service(TestDispatcherServlet.java:72)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:614)
	at org.springframework.mock.web.MockFilterChain$ServletFilterProxy.doFilter(MockFilterChain.java:165)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.test.web.servlet.MockMvc.perform(MockMvc.java:201)
10:28:55.832[    main] DEBUG  c.s.extractor.utils.ExtractorAdviceUtil fc2bc242-d991-4ab1-b467-645ab792a2ea :  :  : ######### Starting extract #########
10:28:55.832[    main] DEBUG       c.s.extractor.utils.ExtractorUtils fc2bc242-d991-4ab1-b467-645ab792a2ea :  :  : Starting 'condition' process for Status code: 500, Method: POST, URI: http://localhost/card_invoice_payment_notification/v1/invoice_payments
10:28:55.834[    main] DEBUG       c.s.extractor.utils.ExtractorUtils fc2bc242-d991-4ab1-b467-645ab792a2ea :  :  : Starting 'doHeader' process
10:28:55.835[    main] DEBUG       c.s.extractor.utils.ExtractorUtils fc2bc242-d991-4ab1-b467-645ab792a2ea :  :  : Finished 'doHeader' process
10:28:55.835[    main] DEBUG       c.s.extractor.utils.ExtractorUtils fc2bc242-d991-4ab1-b467-645ab792a2ea :  :  : Starting 'doHeaderAuthorization' process
10:28:55.835[    main] DEBUG       c.s.extractor.utils.ExtractorUtils fc2bc242-d991-4ab1-b467-645ab792a2ea :  :  : Finished 'doHeaderAuthorization' process
10:28:55.835[    main] DEBUG       c.s.extractor.utils.ExtractorUtils fc2bc242-d991-4ab1-b467-645ab792a2ea :  :  : Starting 'doSystem' process
10:28:55.835[    main] DEBUG       c.s.extractor.utils.ExtractorUtils fc2bc242-d991-4ab1-b467-645ab792a2ea :  :  : Finished 'doSystem' process
10:28:55.835[    main] DEBUG       c.s.extractor.utils.ExtractorUtils fc2bc242-d991-4ab1-b467-645ab792a2ea :  :  : Starting 'doResponse' process
10:28:55.857[    main] DEBUG       c.s.extractor.utils.ExtractorUtils fc2bc242-d991-4ab1-b467-645ab792a2ea :  :  : Finished 'doResponse' process
10:28:55.857[    main] DEBUG       c.s.extractor.utils.ExtractorUtils fc2bc242-d991-4ab1-b467-645ab792a2ea :  :  : Starting 'doRequest' process
10:28:55.857[    main] DEBUG       c.s.extractor.utils.ExtractorUtils fc2bc242-d991-4ab1-b467-645ab792a2ea :  :  : Finished 'doRequest' process
10:28:55.857[    main] DEBUG       c.s.extractor.utils.ExtractorUtils fc2bc242-d991-4ab1-b467-645ab792a2ea :  :  : Starting 'doManualSet' process
10:28:55.857[    main] DEBUG       c.s.extractor.utils.ExtractorUtils fc2bc242-d991-4ab1-b467-645ab792a2ea :  :  : Starting 'doMDC' process
10:28:55.857[    main] DEBUG       c.s.extractor.utils.ExtractorUtils fc2bc242-d991-4ab1-b467-645ab792a2ea :  :  : Finished extract MDC
10:28:55.857[    main] DEBUG       c.s.extractor.utils.ExtractorUtils fc2bc242-d991-4ab1-b467-645ab792a2ea :  :  : Finished 'doMDC' process
10:28:55.857[    main] DEBUG  c.s.extractor.utils.ExtractorAdviceUtil fc2bc242-d991-4ab1-b467-645ab792a2ea :  :  : Extracted and starting send to: santander-telemetry-log > json
10:28:55.861[    main] INFO        c.s.e.p.TelemetryLogImplementation fc2bc242-d991-4ab1-b467-645ab792a2ea :  :  : Telemetry log has been recorded
10:28:55.861[    main] DEBUG       c.s.e.p.TelemetryLogImplementation fc2bc242-d991-4ab1-b467-645ab792a2ea :  :  : json logEvent: Event(id=044c6381-297b-4d2b-9f3e-17a53c853cd7, eventTime=2024-09-09T10:28:55.858-0300, sigla=MPA, application=sbr-monetar-invoicebatch, journey=Cartoes, subJourney=Pagamento de fatura, channel=One Digital, product=Cartão de credito, transaction=, hostname=N2418096.bs.br.bsch, producer=arsenal-with-telemetry2, source=br.com.santander, specversion=1.0.0, type=TEC, dataContentType=application/json, correlationId=, span=PAGAMENTO_FATURA_WEBHOOK, returnCode=500, data=EventData(data=TemetryAttributes [mapAttributes={key-st_identificador= , key-st_type=TEC, key-st_timestamp=2024-09-09T10:28:55.835041700, key-st_response={timestamp=2024-09-09T13:28:55.820571500Z, httpStatus=INTERNAL_SERVER_ERROR, errorCode=1002, title=ERROR_SEND_TOPIC_KAFKA, message=webhook.error_send_topic, details=null, traceId=fc2bc242-d991-4ab1-b467-645ab792a2ea}, key-st-error=Cannot invoke "java.util.concurrent.CompletableFuture.get()" because the return value of "org.springframework.kafka.core.KafkaTemplate.send(org.apache.kafka.clients.producer.ProducerRecord)" is null}]))
10:28:55.862[    main] DEBUG  c.s.extractor.utils.ExtractorAdviceUtil fc2bc242-d991-4ab1-b467-645ab792a2ea :  :  : Successfully extrat and sent to santander-telemetry-log > json > {"id":"","eventTime":"","sigla":"MPA","application":"sbr-monetar-invoicebatch","journey":"Cartoes","subJourney":"Pagamento de fatura","channel":"One Digital","product":"Cartão de credito","transaction":"","hostname":"N2418096.bs.br.bsch","producer":"","source":"","specversion":"","type":"TEC","dataContentType":"application/json","correlationId":"","span":"PAGAMENTO_FATURA_WEBHOOK","returnCode":"500","data":{"data":{"mapAttributes":{"key-st_identificador":" ","key-st_type":"TEC","key-st_timestamp":"2024-09-09T10:28:55.835041700","key-st_response":{"timestamp":"2024-09-09T13:28:55.820571500Z","httpStatus":"INTERNAL_SERVER_ERROR","errorCode":1002,"title":"ERROR_SEND_TOPIC_KAFKA","message":"webhook.error_send_topic","details":null,"traceId":"fc2bc242-d991-4ab1-b467-645ab792a2ea"},"key-st-error":"Cannot invoke \"java.util.concurrent.CompletableFuture.get()\" because the return value of \"org.springframework.kafka.core.KafkaTemplate.send(org.apache.kafka.clients.producer.ProducerRecord)\" is null"}}}}
10:28:55.862[    main] DEBUG  c.s.extractor.utils.ExtractorAdviceUtil fc2bc242-d991-4ab1-b467-645ab792a2ea :  :  : ######### Finished extract #########

java.lang.AssertionError: Status expected:<202> but was:<500>
Expected :202
Actual   :500
<Click to see difference>


	at org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:59)
	at org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:122)
	at org.springframework.test.web.servlet.result.StatusResultMatchers.lambda$matcher$9(StatusResultMatchers.java:637)
	at org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:214)
	at com.santander.mpa.InvoicePaymentIntegrationTest.testInvoicePaymentWebhook(InvoicePaymentIntegrationTest.java:57)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)


