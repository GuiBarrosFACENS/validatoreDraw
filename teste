package com.santander.mpa.app.service.writers;

import com.santander.extractor.utils.ExtractorAdvice;
import com.santander.mpa.domain.usecase.CreateFileUseCase;
import com.santander.mpa.infra.InvoiceCnabBatchProperties;
import com.santander.mpa.infra.exception.ErrorWriteFileException;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.springframework.batch.item.Chunk;

import java.io.IOException;
import java.util.List;

import static org.mockito.ArgumentMatchers.anyString;
import static org.mockito.Mockito.*;

class FileSegmentsWriterServiceTest {

    @Mock
    private InvoiceCnabBatchProperties invoiceCnabBatchProperties;

    @Mock
    private CreateFileUseCase createFileUseCase;

    @Mock
    private ExtractorAdvice extractor;

    @InjectMocks
    private FileSegmentsWriterService fileSegmentsWriterService;

    @BeforeEach
    void setUp() {
        MockitoAnnotations.openMocks(this);
        when(invoiceCnabBatchProperties.getFileSource()).thenReturn("/path/to/source");
        when(invoiceCnabBatchProperties.getSegmentFileName()).thenReturn("test-file.txt");
    }

    @Test
    void testWriteSuccess() throws IOException {
        Chunk<String> chunk = new Chunk<>(List.of("line1", "line2"));

        fileSegmentsWriterService.write(chunk);

        verify(createFileUseCase).createFile("/path/to/source/test-file.txt", new StringBuilder("line1line2"));
        verify(extractor).execute("telemetria_log_category");
    }

    @Test
    void testWriteIOException() throws IOException {
        Chunk<String> chunk = new Chunk<>(List.of("line1", "line2"));
        doThrow(new IOException("File error")).when(createFileUseCase).createFile(anyString(), any());

        try {
            fileSegmentsWriterService.write(chunk);
        } catch (ErrorWriteFileException e) {
            // Expected exception
        }

        verify(createFileUseCase).createFile("/path/to/source/test-file.txt", new StringBuilder("line1line2"));
        verify(extractor, never()).execute(anyString());
    }
}
